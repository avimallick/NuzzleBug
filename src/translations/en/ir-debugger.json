{
    "controls": {
        "pause": "Pause", 
        "resume": "Resume",
        "step-back": "Step back", 
        "step-over": "Step over", 
        "ir-questions": "Show Questions",
        "activate-observation": "Activate observation",
        "deactivate-observation": "Deactivate observation",
        "open-debugger": "open questions"
    },
    "header": {
        "title-sprite": "Interrogative Debugger for sprite <i>{sprite}</i>",
        "title-stage": "Interrogative Debugger for the stage",
        "title-block": "Interrogative Debugger for the block",
        "title": "Interrogative Debugger",
        "of": "of",
        "expand": "Expand",
        "close": "Close", 
        "shrink": "Shrink",
        "refresh": "Refresh",
        "back": "Back"
    }, 
    "target": {
        "stage": "Stage",
        "original": "Original",
        "clone": "Clone {index}"
    },
    "category": {
        "expand": "Expand category",
        "close": "Close category", 
        "type": {
            "motion": "Motion",
            "look": "Look",
            "sound": "Sound",
            "events": "Events",
            "control": "Control",
            "sensing": "Sensing", 
            "operators": "Operators", 
            "variables": "Variables",
            "execution": "Execution"
        }
    },
    "question-hierarchy": {
        "empty": "No questions available."
    },
    "question": {
        "form": {
            "why-did": "Why did ...?",
            "why-did-not": "Why didn't ...?",
            "when-did": "When did ...?"
        },
        "motion": {
            "why-did-move": "Why did the <b>position</b> of sprite <i>{sprite}</i> change?",
            "why-did-not-move": "Why didn't the <b>position</b> of sprite <i>{sprite}</i> change?",
            "why-did-move-right": "Why did sprite <i>{sprite}</i> <b>move rightwards</b>?",
            "why-did-not-move-right": "Why didn't sprite <i>{sprite}</i> <b>move rightwards</b>?",
            "why-did-move-left": "Why did sprite <i>{sprite}</i> <b>move leftwards</b>?",
            "why-did-not-move-left": "Why didn't sprite <i>{sprite}</i> <b>move leftwards</b>?",
            "why-did-move-up": "Why did sprite <i>{sprite}</i> <b>move upwards</b>?",
            "why-did-not-move-up": "Why didn't sprite <i>{sprite}</i> <b>move upwards</b>?",
            "why-did-move-down": "Why did sprite <i>{sprite}</i> <b>move downwards</b>?",
            "why-did-not-move-down": "Why didn't sprite <i>{sprite}</i> <b>move downwards</b>?",
            "why-did-direction-change-to": "Why did the direction of sprite <i>{sprite}</i> change to <b>{direction}°</b>?",
            "why-did-not-direction-change-to": "Why didn't the direction of sprite <i>{sprite}</i> change to <b>{direction}°</b>?",
            "why-did-point-towards-sprite": "Why did sprite <i>{sprite}</i> point towards sprite <b><i>{direction}</i></b>?",
            "why-did-not-point-towards-sprite": "Why didn't sprite <i>{sprite}</i> point towards sprite <b><i>{direction}</i></b>?",
            "why-did-point-towards-mousepointer": "Why did sprite <i>{sprite}</i> point towards the <b>mouse-pointer</b>?",
            "why-did-not-point-towards-mousepointer": "Why didn't sprite <i>{sprite}</i> point towards the <b>mouse-pointer</b>?",
            "why-did-direction-change": "Why did the <b>direction</b> of sprite <i>{sprite}</i> change?",
            "why-did-not-direction-change": "Why didn't the <b>direction</b> of sprite <i>{sprite}</i> change?",
            "why-did-turn-clockwise": "Why did sprite <i>{sprite}</i> <b>turn clockwise</b>?",
            "why-did-not-turn-clockwise": "Why didn't sprite <i>{sprite}</i> <b>turn clockwise</b>?",
            "why-did-turn-counterclockwise": "Why did sprite <i>{sprite}</i> <b>turn counterclockwise</b>?",
            "why-did-not-turn-counterclockwise": "Why didn't sprite <i>{sprite}</i> <b>turn counterclockwise</b>?",
            "why-did-turn-right": "Why did sprite <i>{sprite}</i> <b>turn to the right</b>?",
            "why-did-not-turn-right": "Why didn't sprite <i>{sprite}</i> <b>turn to the right</b>?",
            "why-did-turn-left": "Why did sprite <i>{sprite}</i> <b>turn to the left</b>?",
            "why-did-not-turn-left": "Why didn't sprite <i>{sprite}</i> <b>turn to the left</b>?"
        },
        "look": {
            "why-did-say": "Why did sprite <i>{sprite}</i> say <b><i>\"{message}\"</i></b> ?", 
            "why-did-not-say": "Why didn't sprite <i>{sprite}</i> say <b><i>\"{message}\"</i></b> ?",
            "why-did-think": "Why did sprite <i>{sprite}</i> think <b><i>\"{message}\"</i></b> ?", 
            "why-did-not-think": "Why didn't sprite <i>{sprite}</i> think <b><i>\"{message}\"</i></b> ?",
            "why-did-size-change": "Why did the <b>size</b> of sprite <i>{sprite}</i> change?",
            "why-did-not-size-change": "Why didn't the <b>size</b> of sprite <i>{sprite}</i> change?",
            "why-did-size-increase": "Why did the size of sprite <i>{sprite}</i> <b>increase</b>?",
            "why-did-not-size-increase": "Why didn't the size of sprite <i>{sprite}</i> <b>increase</b>?",
            "why-did-size-decrease": "Why did the size of sprite <i>{sprite}</i> <b>decrease</b>?",
            "why-did-not-size-decrease": "Why didn't the size of sprite <i>{sprite}</i> <b>decrease</b>?",
            "why-did-sprite-show": "Why did the visibility of sprite <i>{sprite}</i> have value <b>visible</b>?",
            "why-did-not-sprite-show": "Why didn't the visibility of sprite <i>{sprite}</i> have value <b>visible</b>?",
            "why-did-sprite-hide": "Why did the visibility of sprite <i>{sprite}</i> have value <b>invisible</b>?",
            "why-did-not-sprite-hide": "Why didn't the visibility of sprite <i>{sprite}</i> have value <b>invisible</b>?",
            "why-did-costume-change": "Why did the <b>costume</b> of sprite <i>{sprite}</i> change?",
            "why-did-not-costume-change": "Why didn't the <b>costume</b> of sprite <i>{sprite}</i> change?",
            "why-did-costume-change-to": "Why did the costume of sprite <i>{sprite}</i> change to <b><i>{costume}</i></b>?",
            "why-did-not-costume-change-to": "Why didn't the costume of sprite <i>{sprite}</i> change to <b><i>{costume}</i></b>?",
            "why-did-backdrop-change": "Why did the <b>backdrop</b> change?",
            "why-did-not-backdrop-change": "Why didn't the <b>backdrop</b> change?",
            "why-did-backdrop-change-to": "Why did the backdrop change to <b><i>{backdrop}</i></b>?",
            "why-did-not-backdrop-change-to": "Why didn't the backdrop change to <b><i>{backdrop}</i></b>?",
            "why-did-sprite-change-backdrop": "Why did sprite <i>{sprite}</i> change the <b>backdrop</b>?",
            "why-did-not-sprite-change-backdrop": "Why didn't sprite <i>{sprite}</i> change the <b>backdrop</b>?",
            "why-did-sprite-change-backdrop-to": "Why did sprite <i>{sprite}</i> change the backdrop to <b><i>{backdrop}</i></b>?",
            "why-did-not-sprite-change-backdrop-to": "Why didn't sprite <i>{sprite}</i> change the backdrop to <b><i>{backdrop}</i></b>?"
        },
        "sound": {
            "why-did-sprite-play": "Why did sprite <i>{sprite}</i> play sound <b><i>{sound}</i></b>?",
            "why-did-stage-play": "Why did the stage play sound <b><i>{sound}</i></b>?",
            "why-did-not-sprite-play": "Why didn't sprite <i>{sprite}</i> play sound <b><i>{sound}</i></b>?",
            "why-did-not-stage-play": "Why didn't the stage play sound <b><i>{sound}</i></b>?",
            "why-did-sprite-stop": "Why did sprite <i>{sprite}</i> <b>stop</b> all sounds?",
            "why-did-stage-stop": "Why did the stage <b>stop</b> all sounds?",
            "why-did-not-sprite-stop": "Why didn't sprite <i>{sprite}</i> <b>stop</b> all sounds?",
            "why-did-not-stage-stop": "Why didn't the stage <b>stop</b> all sounds?"
        },
        "event": {
            "why-did-sprite-send": "Why did sprite <i>{sprite}</i> broadcast the message <b><i>{message}</i></b> ?",
            "why-did-stage-send": "Why did the stage broadcast the message <b><i>{message}</i></b> ?",
            "why-did-not-sprite-send": "Why didn't sprite <i>{sprite}</i> broadcast the message <b><i>{message}</i></b> ?",
            "why-did-not-stage-send": "Why didn't the stage broadcast the message <b><i>{message}</i></b> ?",
            "why-did-sprite-receive": "Why did sprite <i>{sprite}</i> receive the message <b><i>{message}</i></b> ?",
            "why-did-stage-receive": "Why did the stage receive the message <b><i>{message}</i></b> ?",
            "why-did-not-sprite-receive": "Why didn't sprite <i>{sprite}</i> receive the message <b><i>{message}</i></b> ?",
            "why-did-not-stage-receive": "Why didn't the stage receive the message <b><i>{message}</i></b> ?"
        },
        "control": {
            "why-did-start-as-clone": "Why did sprite <i>{sprite}</i> start as a <b>clone</b>?",
            "why-did-not-start-as-clone": "Why didn't sprite <i>{sprite}</i> start as a <b>clone</b>?",
            "why-did-sprite-clone-sprite": "Why did sprite <i>{sprite}</i> create a <b>clone</b> of sprite <b><i>{clone}</i></b>?",
            "why-did-stage-clone-sprite": "Why did the stage create a <b>clone</b> of sprite <b><i>{clone}</i></b>?",
            "why-did-not-sprite-clone-sprite": "Why didn't sprite <i>{sprite}</i> create a <b>clone</b> of sprite <b><i>{clone}</i></b>?",
            "why-did-not-stage-clone-sprite": "Why didn't the stage create a <b>clone</b> of sprite <b><i>{clone}</i></b>?"
        },
        "sensing": {
            "why-did-sprite-ask": "Why did sprite <i>{sprite}</i> ask <b><i>\"{message}\"</i></b> ?", 
            "why-did-stage-ask": "Why did the stage ask <b><i>\"{message}\"</i></b> ?", 
            "why-did-not-sprite-ask": "Why didn't sprite <i>{sprite}</i> ask <b><i>\"{message}\"</i></b> ?",
            "why-did-not-stage-ask": "Why didn't the stage ask <b><i>\"{message}\"</i></b> ?"
        },
        "operator": {
            "why-did-meet-condition-1": "Why did the condition",
            "why-did-meet-condition-2": "evaluate to true?",
            "why-did-not-meet-condition-1": "Why didn't the condition",
            "why-did-not-meet-condition-2": "evaluate to true?"
        },
        "variable": {
            "why-did-have-value": "Why did variable <code class=\"scratchBlock\">({variable} :: #FF8C1A)</code> have the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>?",
            "why-did-not-have-value": "Why didn't variable <code class=\"scratchBlock\">({variable} :: #FF8C1A)</code> have the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>?"
        },
        "list": {
            "why-did-have-value": "Why did list <code class=\"scratchBlock\">({list} :: list)</code> have the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>?",
            "why-did-not-contain-item": "Why didn't list <code class=\"scratchBlock\">({list} :: list)</code> contain <code class=\"scratchBlock\">({item} :: #ffffff)</code>?"
        },
        "execution": {
            "why-did-block-execute": "Why did the block execute?",
            "why-did-not-block-execute": "Why didn't the block execute?",
            "when-did-block-execute": "When did the block execute?"
        },
        "input": {
            "why-did-have-value": "Why did <code class=\"scratchBlock\">{input}</code> have the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>?"
        }
    },
    "behavior": {
        "motion": {
            "move": "The position changed",
            "not-move": "The position didn't change",
            "move-right": "The sprite moved rightwards",
            "not-move-right": "The sprite didn't move rightwards",
            "move-left": "The sprite moved leftwards",
            "not-move-left": "The sprite didn't move leftwards",
            "move-up": "The sprite moved upwards",
            "not-move-up": "The sprite didn't move upwards",
            "move-down": "The sprite moved downwards",
            "not-move-down": "The sprite didn't move downwards",
            "direction-change-to": "The direction changed to {direction}°",
            "not-direction-change-to": "The direction didn't change to {direction}°",
            "point-towards-sprite": "The sprite pointed towards sprite <i>{direction}</i>",
            "not-point-towards-sprite": "The sprite didn't point towards sprite <i>{direction}</i>",
            "point-towards-mousepointer": "The sprite pointed towards the mouse-pointer",
            "not-point-towards-mousepointer": "The sprite didn't point towards the mouse-pointer",
            "direction-change": "The direction changed",
            "not-direction-change": "The direction didn't change",
            "turn-clockwise": "The sprite turned clockwise",
            "not-turn-clockwise": "The sprite didn't turn clockwise",
            "turn-counterclockwise": "The sprite turned counterclockwise",
            "not-turn-counterclockwise": "The sprite didn't turn counterclockwise",
            "turn-right": "The sprite turned to the right",
            "not-turn-right": "The sprite didn't turn to the right",
            "turn-left": "The sprite turned to the left",
            "not-turn-left": "The sprite didn't turn to the left"
        },
        "look": {
            "say": "The sprite said <i>\"{message}\"</i>", 
            "not-say": "The sprite didn't say <i>\"{message}\"</i>",
            "think": "The sprite thought <i>\"{message}\"</i>", 
            "not-think": "The sprite didn't think <i>\"{message}\"</i>",
            "size-change": "The size changed",
            "not-size-change": "The size didn't change",
            "size-increase": "The size increased",
            "not-size-increase": "The size didn't increase",
            "size-decrease": "The size decreased",
            "not-size-decrease": "The size didn't decrease",
            "sprite-show": "The sprite was visible",
            "not-sprite-show": "The sprite wasn't visible",
            "sprite-hide": "The sprite was invisible",
            "not-sprite-hide": "The sprite wasn't invisible",
            "costume-change": "The costume changed",
            "not-costume-change": "The costume didn't change",
            "costume-change-to": "The costume changed to <i>{costume}</i>",
            "not-costume-change-to": "The costume didn't change to <i>{costume}</i>",
            "backdrop-change": "The backdrop changed",
            "not-backdrop-change": "The backdrop didn't change",
            "backdrop-change-to": "The backdrop changed to <i>{backdrop}</i>",
            "not-backdrop-change-to": "The backdrop didn't change to <i>{backdrop}</i>",
            "sprite-change-backdrop": "The sprite changed the backdrop",
            "not-sprite-change-backdrop": "The sprite didn't change the backdrop",
            "sprite-change-backdrop-to": "The sprite changed the backdrop to <i>{backdrop}</i>",
            "not-sprite-change-backdrop-to": "The sprite didn't change the backdrop to <i>{backdrop}</i>"
        },
        "sound": {
            "sprite-play": "The sprite played the sound <i>{sound}</i>",
            "stage-play": "The stage played the sound <i>{sound}</i>",
            "not-sprite-play": "The sprite didn't play the sound <i>{sound}</i>",
            "not-stage-play": "The stage didn't play the sound <i>{sound}</i>",
            "sprite-stop": "The sprite stopped all sounds",
            "stage-stop": "The stage stopped all sounds",
            "not-sprite-stop": "The sprite didn't stop all sounds",
            "not-stage-stop": "The stage didn't stop all sounds"
        },
        "event": {
            "sprite-send": "The sprite broadcasted the message <i>{message}</i>",
            "stage-send": "The stage broadcasted the message <i>{message}</i>",
            "not-sprite-send": "The sprite didn't broadcast the message <i>{message}</i>",
            "not-stage-send": "The stage didn't broadcast the message <i>{message}</i>",
            "sprite-receive": "The sprite received the message <i>{message}</i>",
            "stage-receive": "The stage received the message <i>{message}</i>",
            "not-sprite-receive": "The sprite didn't receive the message <i>{message}</i>",
            "not-stage-receive": "The stage didn't receive the message <i>{message}</i>"
        },
        "control": {
            "start-as-clone": "The sprite started as a clone",
            "not-start-as-clone": "The sprite didn't start as a clone",
            "sprite-clone-sprite": "The sprite created a clone of sprite <i>{clone}</i>",
            "stage-clone-sprite": "The stage created a clone of sprite <i>{clone}</i>",
            "not-sprite-clone-sprite": "The sprite didn't create a clone of sprite <i>{clone}</i>",
            "not-stage-clone-sprite": "The stage didn't create a clone of sprite <i>{clone}</i>"
        },
        "sensing": {
            "sprite-ask": "The sprite asked <i>\"{message}\"</i>", 
            "stage-ask": "The stage asked <i>\"{message}\"</i>", 
            "not-sprite-ask": "The sprite didn't ask <i>\"{message}\"</i>",
            "not-stage-ask": "The stage didn't ask <i>\"{message}\"</i>"
        },
        "operator": {
            "meet-condition": "The condition evaluated to true",
            "not-meet-condition": "The condition didn't evaluate to true"
        },
        "variable": {
            "have-value": "The variable had the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>",
            "not-have-value": "The variable didn't have the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>"
        },
        "list": {
            "have-value": "The list had the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>",
            "not-contain-item": "The list didn't contain <code class=\"scratchBlock\">({item} :: #ffffff)</code>"
        },
        "execution": {
            "block-execute": "The block executed",
            "not-block-execute": "The block didn't execute"
        },
        "input": {
            "have-value": "<code class=\"scratchBlock\">{input}</code> had the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>"
        }
    },
    "answer": {
        "because" :  ", because ",
        "then" :  ", then ",
        "next" :  ", next ",
        "and-then" :  " and afterwards ",
        "and-thereby": " and thereby ",
        "and-because" :  " and because ",
        "dot": ".",
        "comma": ", ",
        "draw-attention-to-block-answers": "<br>Do you need an explanation for a block? Then click on the <div style=\"display: inline-block; margin-top: 3px; padding: 0 4.5px; border: 1.4px solid #575E75; border-radius: 15px;\">?</div> next to it!",
        "all-reasons-unobserved": ", but it was not observed why!",
        "some-reasons-unobserved": "<br>Not all responsible blocks were observed!",
        "positive": {
            "block-executed": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block was executed.",
            "block-executed-with-value": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block was executed with value <code class=\"scratchBlock\">({value} :: #ffffff)</code>.",
            "block-executed-with-rotation-style": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block was executed with rotation style <i>{rotationStyle}</i>.",
            "block-executed-with-value-with-rotation-style": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block was executed with value <code class=\"scratchBlock\">({value} :: #ffffff)</code> and with rotation style <i>{rotationStyle}</i>.",
            "multiple-behavior-blocks": "the execution of {count} <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks caused this behavior.",
            "turn-right": "the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block changed the direction from a negative to a positive value and because the rotation style was 'left-right'. ",
            "turn-left": "the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block changed the direction from a positive to a negative value and because the rotation style was 'left-right'. ",
            "hard-coded-comparison": ", because none of the inputs is variable and therefore the comparison is always true."
        },
        "negative": {
            "execution-stopped": ", because the execution was stopped",
            "execution-paused": ", because the execution was paused",
            "breakpoint-paused-execution": ", because the execution was paused by a breakpoint",
            "observation-stopped": ", because the observation was stopped",
            "single-behavior-block-unexecuted": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block was not executed.",
            "single-possible-behavior-block-unexecuted": " and thereby the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block that could lead to the behavior was not executed.",
            "control-flow-interrupted": " and therefore all subsequent blocks that could lead to the behavior were not executed.",
            "all-behavior-blocks-unexecuted": ", because none of the {count} <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks was executed.",
            "all-possible-behavior-blocks-unexecuted": ", because none of the {count} <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks that could lead to the behavior was executed.",
            "one-behavior-block-executed": ", because the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block didn't lead to that behavior.",
            "some-behavior-blocks-executed": ", because none of the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks led to that behavior.",
            "one-behavior-block-executed-wrong-input": ", because the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block wasn't called with value <code class=\"scratchBlock\">({expectedInput} :: #ffffff)</code>.",
            "some-behavior-blocks-executed-wrong-input": ", because none of the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks was called with value <code class=\"scratchBlock\">({expectedInput} :: #ffffff)</code>.",
            "one-behavior-block-executed-no-change": ", because the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block didn't change {attribute}.",
            "some-behavior-blocks-executed-no-change": ", because none of the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks changed {attribute}.",
            "one-behavior-block-executed-not-turn-positive": ", because the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block wasn't executed with a positive value.",
            "one-behavior-block-executed-not-turn-negative": ", because the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block wasn't executed with a negative value.",
            "one-behavior-block-executed-no-left-to-right-direction-change": ", because the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block didn't change the direction from a negative to a positive value.",
            "one-behavior-block-executed-no-right-to-left-direction-change": ", because the executed <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block didn't change the direction from a positive to a negative value.",
            "one-behavior-block-unexecuted": " Another <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block that would lead to the behavior was not executed.",
            "one-possible-behavior-block-unexecuted": " Another <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block that could lead to the behavior was not executed.",
            "some-behavior-blocks-unexecuted": " {count} other <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks that would lead to the behavior were not executed.",
            "some-possible-behavior-blocks-unexecuted": " {count} other <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> blocks that could lead to the behavior were not executed.",
            "variable-value-set-but-changed-afterwards": "The variable was set to <code class=\"scratchBlock\">({value} :: #ffffff)</code>, but changed afterwards.",
            "list-item-removed": "The list contained the item <code class=\"scratchBlock\">({item} :: #ffffff)</code>, but it was deleted.",
            "block-not-reachable": ", because the block is not reachable!",
            "behavior-block-not-reachable": ", because the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block that would lead to the behavior is not reachable!",
            "possible-behavior-block-not-reachable": ", because the <span blockType=\"stack\" blockCategory=\"{blockCategory}\">{blockType}</span> block that could lead to the behavior is not reachable!",
            "no-broadcast-send-block": ", because there is no block broadcasting this message!",
            "hard-coded-comparison": ", because none of the inputs is variable and therefore the comparison is always false."
        },
        "operator": {
            "variable-have-value": "<code class=\"scratchBlock\">{variable}</code> had the value <code class=\"scratchBlock\">({value} :: #ffffff)</code>",
            "condition-true": " is true.",
            "condition-false": " is not true."
        },
        "sensing": {
            "touching-sprite-edge": "Sprite <i>{sprite}</i> touched the <i>edge</i> at the positions highlighted in red in the picture.",
            "touching-sprite-mouse": "Sprite <i>{sprite}</i> touched the <i>mouse-pointer</i> as shown in the picture. <br> The <i>mouse-pointer</i> was at position ({mouseX},{mouseY}).",
            "touching-sprite-sprite": "Sprite <i>{sprite1}</i> and sprite <i>{sprite2}</i> touched each other at the positions highlighted in the picture.",
            "touching-sprite-color": "Sprite <i>{sprite}</i> touched the selected color at the positions highlighted in the picture.",
            "touching-color-color": "The colors touched each other at the positions highlighted in the picture.",
            "distance-sprite-edge": "The minimal distance from sprite <i>{sprite}</i> to the <i>edge</i> was <span style=\"color: red;\"><b>{distance}</b></span>.",
            "distance-sprite-mouse": "The minimal distance from sprite <i>{sprite}</i> to the <i>mouse-pointer</i> at position ({mouseX},{mouseY}) was <span style=\"color: red;\"><b>{distance}</b></span>.",
            "distance-sprite-sprite": "The minimal distance from sprite <i>{sprite1}</i> to sprite <i>{sprite2}</i> was <span style=\"color: red;\"><b>{distance}</b></span>.",
            "distance-sprite-color": "The minimal distance from sprite <i>{sprite}</i> to the selected color was <span style=\"color: red;\"><b>{distance}</b></span>.",
            "distance-color-color": "The minimal distance of the colors was <span style=\"color: red;\"><b>{distance}</b></span>.",
            "sprite-invisible": "Sprite <i>{sprite}</i> could not be touched, because it was invisible!",
            "sprites-invisible": "Sprite <i>{sprite1}</i> and sprite <i>{sprite2}</i> could not touch each other, because they were invisible!",
            "nonexistent-color": "The color <span style=\"color: {color}; background-color: {color}; padding: 0 3px; border-radius: 10px\">⬤</span> did not occur! <br> Try to select the desired color with the color picker.",
            "nonexistent-colors": "The colors <span style=\"color: {color1}; background-color: {color1}; padding: 0 3px; border-radius: 10px\">⬤</span> and <span style=\"color: {color2}; background-color: {color2}; padding: 0 3px; border-radius: 10px\">⬤</span> did not occur! <br> Try to select the desired colors with the color picker."
        },
        "time": {
            "block-executed-seconds-after-green-flag": "The block executed <span style=\"color: red;\"><b>{timeElapsed}</b></span> seconds after clicking the green flag.",
            "block-executed-seconds-after-observation-start": "The block executed <span style=\"color: red;\"><b>{timeElapsed}</b></span> seconds after starting the observation."
        }
    },
    "reason": {
        "flag-clicked": "<code class=\"scratchBlock\">@greenFlag :: events reporter</code> was clicked",
        "not-flag-clicked": "<code class=\"scratchBlock\">@greenFlag :: events reporter</code> wasn't clicked",
        "not-flag-clicked-during-lifetime": "a clone does not react to the event <i>click on</i> <code class=\"scratchBlock\">@greenFlag :: events reporter</code>",
        "sprite-clicked": "the sprite <b style=\"color: #ffbf00\"><i>{sprite}</i> was clicked</b>",
        "not-sprite-clicked": "the sprite <b style=\"color: #ffbf00\"><i>{sprite}</i> wasn't clicked</b>",
        "stage-clicked": "the <b style=\"color: #ffbf00\">stage was clicked</b>",
        "not-stage-clicked": "the <b style=\"color: #ffbf00\">stage wasn't clicked</b>",
        "key-pressed": "the key <span blockType=\"reporter\" blockCategory=\"events\">{key}</span> was pressed",
        "not-key-pressed": "the key <span blockType=\"reporter\" blockCategory=\"events\">{key}</span> wasn't pressed",
        "not-key-pressed-during-lifetime": "the key <span blockType=\"reporter\" blockCategory=\"events\">{key}</span> wasn't pressed during the lifetime of the clone",
        "broadcast-sent": "the message <span blockType=\"reporter\" blockCategory=\"events\">{broadcastMessage}</span> was sent",
        "broadcast-sent-and-received": "the message <span blockType=\"reporter\" blockCategory=\"events\">{broadcastMessage}</span> was sent and received",
        "not-broadcast-sent": "the message <span blockType=\"reporter\" blockCategory=\"events\">{broadcastMessage}</span> wasn't sent",
        "broadcast-received": "the message <span blockType=\"reporter\" blockCategory=\"events\">{broadcastMessage}</span> was received",
        "not-broadcast-received": "the message <span blockType=\"reporter\" blockCategory=\"events\">{broadcastMessage}</span> wasn't received",
        "clone-created": "a <b style=\"color: #ffab19\">clone</b> of sprite <i>{sprite}</i> <b style=\"color: #ffab19\">was created</b>",
        "not-clone-created": "a <b style=\"color: #ffab19\">clone</b> of sprite <i>{sprite}</i> <b style=\"color: #ffab19\">wasn't created</b>",
        "clone-started": "the sprite <i>{sprite}</i> <b style=\"color: #ffab19\">started as a clone</b>",
        "not-clone-started": "the sprite <i>{sprite}</i> <b style=\"color: #ffab19\">didn't start as a clone</b>",
        "not-clone-started-irrelevant": "the event <b style=\"color: #ffab19\"><i>I start as a clone</i></b> can not occur for an original sprite",
        "backdrop-switched": "the backdrop switched to <span blockType=\"reporter\" blockCategory=\"look\">{backdrop}</span>",
        "not-backdrop-switched": "the backdrop didn't switch to <span blockType=\"reporter\" blockCategory=\"look\">{backdrop}</span>",
        "not-backdrop-switched-during-lifetime": "the backdrop didn't switch to <span blockType=\"reporter\" blockCategory=\"look\">{backdrop}</span> during the lifetime of the clone",
        "loudness-greater-than": "the <b style=\"color: #ffbf00\">loudness</b> was greater than {value}",
        "not-loudness-greater-than": "the <b style=\"color: #ffbf00\">loudness</b> wasn't greater than {value}",
        "not-loudness-greater-than-during-lifetime": "the <b style=\"color: #ffbf00\">loudness</b> wasn't greater than {value} during the lifetime of the clone",
        "timer-greater-than": "the <b style=\"color: #ffbf00\">timer</b> was greater than {value}",
        "not-timer-greater-than": "the <b style=\"color: #ffbf00\">timer</b> wasn't greater than {value}",
        "not-timer-greater-than-during-lifetime": "the <b style=\"color: #ffbf00\">timer</b> wasn't greater than {value} during the lifetime of the clone",
        "condition-true-1": "the condition ",
        "not-condition-true-1": "the condition ",
        "condition-true-2": " was true",
        "not-condition-true-2": " wasn't true",
        "condition-false-1": "the condition ",
        "not-condition-false-1": "the condition ",
        "condition-false-2": " was false",
        "not-condition-false-2": " wasn't false",
        "repeat": "the <span blockType=\"stack\" blockCategory=\"control\">repeat</span> block was executed",
        "not-repeat": "the <span blockType=\"stack\" blockCategory=\"control\">repeat</span> block wasn't executed",
        "repeat-forever": "the <span blockType=\"stack\" blockCategory=\"control\">forever</span> block was executed",
        "not-repeat-forever": "the <span blockType=\"stack\" blockCategory=\"control\">forever</span> block wasn't executed",
        "value-set": "the value was set to <code class=\"scratchBlock\">{value}</code>",
        "value-change-by": "was changed by <code class=\"scratchBlock\">{change}</code>",
        "value-change-by-times": "was changed {times} times by <code class=\"scratchBlock\">{change}</code>",
        "move": "the sprite moved <code class=\"scratchBlock\">{steps}</code> steps",
        "move-times": "the sprite moved {times} times <code class=\"scratchBlock\">{steps}</code> steps",
        "go-to": "the sprite went to position x:<code class=\"scratchBlock\">{x}</code> y:<code class=\"scratchBlock\">{y}</code>",
        "go-to-related": "the sprite went to <code class=\"scratchBlock\">{to}</code>",
        "go-to-related-sprite": "the sprite went to sprite <code class=\"scratchBlock\">{to}</code>",
        "go-to-related-mouse": "the sprite went to <code class=\"scratchBlock\">(mouse-pointer :: motion)</code>",
        "go-to-related-random": "the sprite went to <code class=\"scratchBlock\">(random position :: motion)</code>",
        "turn-left": "turned <code class=\"scratchBlock\">{degrees}</code> degrees counterclockwise",
        "turn-left-times": "turned <code class=\"scratchBlock\">{degrees}</code> degrees counterclockwise {times} times",
        "turn-right": "turned <code class=\"scratchBlock\">{degrees}</code> degrees clockwise",
        "turn-right-times": "turned <code class=\"scratchBlock\">{degrees}</code> degrees clockwise {times} times",
        "direction-set-related-mouse": "the sprite pointed towards the <code class=\"scratchBlock\">(mouse-pointer :: motion)</code>",
        "direction-set-related-sprite": "the sprite pointed towards sprite <code class=\"scratchBlock\">{towards}</code>",
        "direction-set-related": "the sprite pointed towards <code class=\"scratchBlock\">{towards}</code>",
        "costume-set": "the costume switched to <code class=\"scratchBlock\">{value}</code>",
        "next-costume": "the costume switched to the next costume",
        "next-costume-times": "the costume switched to the next costume {times} times",
        "backdrop-set": "the backdrop switched to <code class=\"scratchBlock\">{value}</code>",
        "next-backdrop": "the backdrop switched to the next backdrop",
        "next-backdrop-times": "the backdrop switched to the next backdrop {times} times",
        "list-add": "the item <code class=\"scratchBlock\">{item}</code> was added",
        "list-add-times": "the item <code class=\"scratchBlock\">{item}</code> was added {times} times",
        "list-insert": "the item <code class=\"scratchBlock\">{item}</code> was inserted at position <code class=\"scratchBlock\">{index}</code>",
        "list-insert-times": "the item <code class=\"scratchBlock\">{item}</code> was inserted at position <code class=\"scratchBlock\">{index}</code> {times} times",
        "list-replace": "the item at position <code class=\"scratchBlock\">{index}</code> was replaced by <code class=\"scratchBlock\">{item}</code>",
        "list-replace-times": "the item at position <code class=\"scratchBlock\">{index}</code> was replaced by <code class=\"scratchBlock\">{item}</code> {times} times",
        "list-delete-at": "the item at position <code class=\"scratchBlock\">{index}</code> was deleted",
        "list-delete-at-times": "the item at position <code class=\"scratchBlock\">{index}</code> was deleted {times} times",
        "list-delete-all": "all items were deleted",
        "initial-value": "the initial value was <code class=\"scratchBlock\">({initialValue} :: #ffffff)</code>",
        "initial-visibility": "it already was <i>{initialVisibility}</i> when <code class=\"scratchBlock\">@greenFlag :: events reporter</code> was clicked",
        "clone-start-value": "the value of the original sprite was <code class=\"scratchBlock\">({initialValue} :: #ffffff)</code> when the clone was created and the clone inherited this property",
        "clone-start-visibility": "the original sprite was <i>{initialVisibility}</i> when the clone was created and the clone inherited this property",
        "observation-start-value": "the value at the observation start was <code class=\"scratchBlock\">({initialValue} :: #ffffff)</code>",
        "observation-start-visibility": "it already was <i>{initialVisibility}</i> when the observation started",
        "procedure-call": "the procedure <span blockType=\"stack\" blockCategory=\"procedure\">{proccode}</span> was called"
    },
    "variable": {
        "x-position": "x position",
        "y-position": "y position",
        "direction": "direction",
        "size": "size",
        "costume": "costume",
        "backdrop": "backdrop",
        "name": "name",
        "number": "number",
        "visibility": "visibility"
    },
    "attribute": {
        "position": "the position",
        "direction": "the direction",
        "size": "the size",
        "costume": "the costume",
        "backdrop": "the backdrop",
        "variable": "the variable"
    },
    "number": {
        "1": "one",
        "2": "two",
        "3": "three",
        "4": "four",
        "5": "five",
        "6": "six",
        "7": "seven",
        "8": "eight",
        "9": "nine",
        "10": "ten",
        "11": "eleven",
        "12": "twelve"
    },
    "block-type": {
        "position": "position",
        "move": "move",
        "go-to": "go to",
        "glide-to": "glide to",
        "set-x": "set x",
        "set-y": "set y",
        "change-x": "change x",
        "change-y": "change y",
        "direction": "direction",
        "set-direction": "point in direction",
        "point-towards": "point towards",
        "turn": "turn",
        "set-rotation-style": "set rotation style",
        "if-on-edge-bounce": "if on edge bounce",
        "say": "say",
        "think": "think",
        "ask": "ask",
        "size": "size",
        "size-set": "set size",
        "size-change": "change size",
        "costume": "costume",
        "costume-set": "switch costume",
        "next-costume": "next costume",
        "backdrop": "backdrop",
        "backdrop-set": "switch backdrop",
        "next-backdrop": "next backdrop",
        "show": "show",
        "hide": "hide",
        "play": "play",
        "stop-sound": "stop sounds",
        "broadcast": "broadcast",
        "clone": "create clone",
        "set-variable": "set variable",
        "add-list-item": "insert"
    },
    "operator": {
        "round": "round {operand}"
    },
    "condition": {
        "true": "true",
        "false": "false",
        "touching-edge": "<touching [edge v]?>",
        "touching-mouse": "<touching [mouse-pointer v]?>",
        "touching-sprite": "<touching [{sprite} v]?>",
        "touching-color": "<touching color [{color}]?>",
        "color-touching-color": "<color [{color1}] is touching [{color2}]?>",
        "key-pressed": "<key [{key} v] pressed?>",
        "mouse-down": "<mouse down?>",
        "and": "<{condition1} and {condition2}>",
        "or": "<{condition1} or {condition2}>",
        "not": "<not {condition}>",
        "compare": "<{operand1} {operator} {operand2}>",  
        "contains": "<{operand1} contains {operand2}?>"
    },
    "visibility": {
        "visible": "visible",
        "invisible": "invisible"
    },
    "block": {
        "from": {
            "sprite": "Block from \"{sprite}\"",
            "stage": "Block from the stage"
        },
        "general-event": "General event"
    },
    "rotation-style": {
        "all-around": "all around",
        "left-right": "left-right",
        "no-rotation": "don't rotate"
    },
    "execution": "execution",
    "execution-stopped": "execution stopped",
    "execution-paused": "execution paused",
    "observation-stopped": "observation stopped",
    "new-line": "<br>"
}